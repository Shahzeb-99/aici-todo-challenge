version: '3.8'

services:
  user-db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
      POSTGRES_DB: ${USER_DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data
      - ./user-service/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  todo-db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: ${TODO_DB_USER}
      POSTGRES_PASSWORD: ${TODO_DB_PASSWORD}
      POSTGRES_DB: ${TODO_DB_NAME}
    ports:
      - "5434:5432"
    volumes:
      - todo-db-data:/var/lib/postgresql/data
      - ./todo-service/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  user-service:
    build:
      context: ./user-service
    depends_on:
      - user-db
    environment:
      DB_HOST: user-db
      DB_PORT: 5432
      DB_USER: ${USER_DB_USER}
      DB_PASSWORD: ${USER_DB_PASSWORD}
      DB_NAME: ${USER_DB_NAME}
      PORT: 3001
    expose:
      - "3001"
    command: npm run dev
    volumes:
      - ./user-service:/app
      - /app/node_modules

  todo-service:
    build:
      context: ./todo-service
    depends_on:
      - todo-db
    environment:
      DB_HOST: todo-db
      DB_PORT: 5432
      DB_USER: ${TODO_DB_USER}
      DB_PASSWORD: ${TODO_DB_PASSWORD}
      DB_NAME: ${TODO_DB_NAME}
      PORT: 3002
    expose:
      - "3002"
    command: npm run dev
    volumes:
      - ./todo-service:/app
      - /app/node_modules

  reverse-proxy:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-service
      - todo-service

  frontend-service:
    build:
      context: ./frontend-service
    depends_on:
      - user-service
      - todo-service
    environment:
      PORT: 3000
      USER_SERVICE_URL: http://user-service:3001
      TODO_SERVICE_URL: http://todo-service:3002
    expose:
      - "3000"
    command: npm run dev -- --host 0.0.0.0 --port 3000
    volumes:
      - ./frontend-service:/app
      - /app/node_modules

volumes:
  user-db-data:
  todo-db-data:
